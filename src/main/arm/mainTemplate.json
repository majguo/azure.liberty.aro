{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "_artifactsLocation": {
            "type": "string",
            "defaultValue": "[deployment().properties.templateLink.uri]",
            "metadata": {
                "description": "The base URI where artifacts required by this template are located. When the template is deployed using the accompanying scripts, a private location in the subscription will be used and this value will be automatically generated."
            }
        },
        "_artifactsLocationSasToken": {
            "type": "securestring",
            "defaultValue": "",
            "metadata": {
                "description": "The sasToken required to access _artifactsLocation.  When the template is deployed using the accompanying scripts, a sasToken will be automatically generated. Use the defaultValue if the staging location is not secured."
            }
        },
        "spTemplateLink": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Link of the embedded template for managing the service principal credentials."
            }
        },
        "aroTemplateLink": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Link of the embedded template for managing application deployment on an ARO cluster."
            }
        },
        "location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
                "description": "Location for all resources."
            }
        },
        "identity": {
            "type": "object",
            "metadata": {
                "description": "User-assigned managed identity granted with contributor role of the same subscription"
            }
        },
        "createCluster": {
            "defaultValue": true,
            "type": "bool",
            "metadata": {
                "description": "Flag indicating whether to create a new cluster or not"
            }
        },
        "clusterName": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Name for the existing cluster"
            }
        },
        "clusterRGName": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Name for the resource group of the existing cluster"
            }
        },
        "projMgrUsername": {
            "type": "string",
            "metadata": {
                "description": "Username for cluster admin."
            }
        },
        "projMgrPassword": {
            "type": "securestring",
            "metadata": {
                "description": "Password for cluster admin."
            }
        },
        "pullSecret": {
            "type": "securestring",
            "defaultValue": "",
            "metadata": {
                "description": "Pull secret from cloud.redhat.com. The json should be input as a string"
            }
        },
        "aadClientId": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "The Application ID of an Azure Active Directory client application"
            }
        },
        "aadClientSecret": {
            "type": "securestring",
            "defaultValue": "",
            "metadata": {
                "description": "The secret of an Azure Active Directory client application"
            }
        },
        "aadObjectId": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "The Object ID of an Azure Active Directory client application"
            }
        },
        "rpObjectId": {
            "type": "String",
            "defaultValue": "",
            "metadata": {
                "description": "The Object ID of the Resource Provider Service Principal"
            }
        },
        "masterVmSize": {
            "type": "string",
            "defaultValue": "Standard_D8s_v3",
            "metadata": {
                "description": "Master Node VM Type"
            }
        },
        "workerVmSize": {
            "type": "string",
            "defaultValue": "Standard_D4s_v3",
            "metadata": {
                "description": "Worker Node VM Type"
            }
        },
        "uploadAppPackage": {
            "defaultValue": false,
            "type": "bool",
            "metadata": {
                "description": "Flag indicating whether to deploy a user uploaded application or a default 'Hello world' application"
            }
        },
        "appPackageUrl": {
            "defaultValue": "",
            "type": "string",
            "metadata": {
                "description": "The url to download user uploaded application package"
            }
        },
        "contextRoot": {
            "defaultValue": "/",
            "type": "string",
            "metadata": {
                "description": "The context root of the application"
            }
        },
        "useOpenLibertyImage": {
            "defaultValue": true,
            "type": "bool",
            "metadata": {
                "description": "Flag indicating whether to use Open Liberty or WebSphere Liberty as application base image"
            }
        },
         "useJava8": {
            "defaultValue": true,
            "type": "bool",
            "metadata": {
                "description": "Flag indicating whether to use Java 8 as Java runtime of the application"
            }
        },
        "appReplicas": {
            "type": "int",
            "defaultValue": 2,
            "metadata": {
                "description": "The number of application replicas to deploy"
            }
        },
        "guidValue": {
            "defaultValue": "[newGuid()]",
            "type": "string",
            "metadata": {
                "description": "The value returned from function newGuid()"
            }
        }
    },
    "variables": {
        "const_currentSubscription": "[subscription().subscriptionId]",
        "name_aroTemplate": "aroTemplate",
        "name_spTemplate": "spTemplate"
    },
    "resources": [
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "${azure.apiVersion}",
            "name": "${customer.usage.attribution.id}",
            "properties": {
                "mode": "Incremental",
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "resources": [
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "${azure.apiVersion}",
            "name": "${aro.start}",
            "properties": {
                "mode": "Incremental",
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "resources": [
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "${azure.apiVersion}",
            "name": "[variables('name_spTemplate')]",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[if(empty(parameters('spTemplateLink')), uri(parameters('_artifactsLocation'), 'nestedtemplates/spTemplate.json'), parameters('spTemplateLink'))]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "_artifactsLocation": {
                        "value": "[parameters('_artifactsLocation')]"
                    },
                    "_artifactsLocationSasToken": {
                        "value": "[parameters('_artifactsLocationSasToken')]"
                    },
                    "location": {
                        "value": "[parameters('location')]"
                    },
                    "identity": {
                        "value": "[parameters('identity')]"
                    },
                    "aadClientId": {
                        "value": "[parameters('aadClientId')]"
                    },
                    "aadClientSecret": {
                        "value": "[parameters('aadClientSecret')]"
                    },
                    "aadObjectId": {
                        "value": "[parameters('aadObjectId')]"
                    },
                    "rpObjectId": {
                        "value": "[parameters('rpObjectId')]"
                    },
                    "guidValue": {
                        "value": "[parameters('guidValue')]"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "${azure.apiVersion}",
            "name": "[variables('name_aroTemplate')]",
            "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', variables('name_spTemplate'))]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[if(empty(parameters('aroTemplateLink')), uri(parameters('_artifactsLocation'), 'nestedtemplates/aroTemplate.json'), parameters('aroTemplateLink'))]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "_artifactsLocation": {
                        "value": "[parameters('_artifactsLocation')]"
                    },
                    "_artifactsLocationSasToken": {
                        "value": "[parameters('_artifactsLocationSasToken')]"
                    },
                    "location": {
                        "value": "[parameters('location')]"
                    },
                    "identity": {
                        "value": "[parameters('identity')]"
                    },
                    "createCluster": {
                        "value": "[parameters('createCluster')]"
                    },
                    "clusterName": {
                        "value": "[parameters('clusterName')]"
                    },
                    "clusterRGName": {
                        "value": "[parameters('clusterRGName')]"
                    },
                    "projMgrUsername": {
                        "value": "[parameters('projMgrUsername')]"
                    },
                    "projMgrPassword": {
                        "value": "[parameters('projMgrPassword')]"
                    },
                    "pullSecret": {
                        "value": "[parameters('pullSecret')]"
                    },
                    "aadClientId": {
                        "reference": {
                            "keyVault": {
                                "id": "[resourceId(variables('const_currentSubscription'), resourceGroup().name, 'Microsoft.KeyVault/vaults', reference(variables('name_spTemplate'), '${azure.apiVersion}').outputs.keyVaultName.value)]"
                            },
                            "secretName": "[reference(variables('name_spTemplate'), '${azure.apiVersion}').outputs.aadClientIdKey.value]"
                        }
                    },
                    "aadClientSecret": {
                        "reference": {
                            "keyVault": {
                                "id": "[resourceId(variables('const_currentSubscription'), resourceGroup().name, 'Microsoft.KeyVault/vaults', reference(variables('name_spTemplate'), '${azure.apiVersion}').outputs.keyVaultName.value)]"
                            },
                            "secretName": "[reference(variables('name_spTemplate'), '${azure.apiVersion}').outputs.aadClientSecretKey.value]"
                        }
                    },
                    "aadObjectId": {
                        "reference": {
                            "keyVault": {
                                "id": "[resourceId(variables('const_currentSubscription'), resourceGroup().name, 'Microsoft.KeyVault/vaults', reference(variables('name_spTemplate'), '${azure.apiVersion}').outputs.keyVaultName.value)]"
                            },
                            "secretName": "[reference(variables('name_spTemplate'), '${azure.apiVersion}').outputs.aadObjectIdKey.value]"
                        }
                    },
                    "rpObjectId": {
                        "reference": {
                            "keyVault": {
                                "id": "[resourceId(variables('const_currentSubscription'), resourceGroup().name, 'Microsoft.KeyVault/vaults', reference(variables('name_spTemplate'), '${azure.apiVersion}').outputs.keyVaultName.value)]"
                            },
                            "secretName": "[reference(variables('name_spTemplate'), '${azure.apiVersion}').outputs.rpObjectIdKey.value]"
                        }
                    },
                    "masterVmSize": {
                        "value": "[parameters('masterVmSize')]"
                    },
                    "workerVmSize": {
                        "value": "[parameters('workerVmSize')]"
                    },
                    "uploadAppPackage": {
                        "value": "[parameters('uploadAppPackage')]"
                    },
                    "appPackageUrl": {
                        "value": "[parameters('appPackageUrl')]"
                    },
                    "contextRoot": {
                        "value": "[parameters('contextRoot')]"
                    },
                    "useOpenLibertyImage": {
                        "value": "[parameters('useOpenLibertyImage')]"
                    },
                    "useJava8": {
                        "value": "[parameters('useJava8')]"
                    },
                    "appReplicas": {
                        "value": "[parameters('appReplicas')]"
                    },
                    "guidValue": {
                        "value": "[parameters('guidValue')]"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "${azure.apiVersion}",
            "name": "${aro.end}",
            "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', variables('name_spTemplate'))]",
                "[resourceId('Microsoft.Resources/deployments', variables('name_aroTemplate'))]"
            ],
            "properties": {
                "mode": "Incremental",
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "resources": [
                    ]
                }
            }
        }
    ],
    "outputs": {
        "clusterName": {
            "value": "[reference(variables('name_aroTemplate'), '${azure.apiVersion}').outputs.clusterName.value]",
            "type": "string"
        },
        "clusterRGName": {
            "value": "[reference(variables('name_aroTemplate'), '${azure.apiVersion}').outputs.clusterRGName.value]",
            "type": "string"
        },
        "clusterConsoleUrl": {
            "value": "[reference(variables('name_aroTemplate'), '${azure.apiVersion}').outputs.clusterConsoleUrl.value]",
            "type": "string"
        },
        "containerRegistryUrl": {
            "value": "[reference(variables('name_aroTemplate'), '${azure.apiVersion}').outputs.containerRegistryUrl.value]",
            "type": "string"
        },
        "appName": {
            "value": "[reference(variables('name_aroTemplate'), '${azure.apiVersion}').outputs.appName.value]",
            "type": "string"
        },
        "appProjName": {
            "value": "[reference(variables('name_aroTemplate'), '${azure.apiVersion}').outputs.appProjName.value]",
            "type": "string"
        },
        "appImage": {
            "condition": "[parameters('uploadAppPackage')]",
            "value": "[reference(variables('name_aroTemplate'), '${azure.apiVersion}').outputs.appImage.value]",
            "type": "string"
        },
        "appServerXmlEncoded (Use `echo \"copied-value\" | base64 -d` to decode the text)": {
            "condition": "[parameters('uploadAppPackage')]",
            "value": "[reference(variables('name_aroTemplate'), '${azure.apiVersion}').outputs.appServerXml.value]",
            "type": "string"
        },
        "appDockerfileEncoded (Use `echo \"copied-value\" | base64 -d` to decode the text)": {
            "condition": "[parameters('uploadAppPackage')]",
            "value": "[reference(variables('name_aroTemplate'), '${azure.apiVersion}').outputs.appDockerfile.value]",
            "type": "string"
        },
        "appDeploymentYamlEncoded (Use `echo \"copied-value\" | base64 -d` to decode the text)": {
            "value": "[reference(variables('name_aroTemplate'), '${azure.apiVersion}').outputs.appDeploymentYaml.value]",
            "type": "string"
        },
        "appEndpoint": {
            "value": "[reference(variables('name_aroTemplate'), '${azure.apiVersion}').outputs.appEndpoint.value]",
            "type": "string"
        }
    }
}